[general]
# List of accounts to be synced, separated by a comma.
accounts = orange,gandi
pythonfile = ~/.config/offlineimap/pass.py

[Account orange]
# Identifier for the local repository; e.g. the maildir to be synced via IMAP.
localrepository = orange-local
# Identifier for the remote repository; i.e. the actual IMAP, usually non-local.
remoterepository = orange-remote

[Repository orange-local]
# OfflineIMAP supports Maildir, GmailMaildir, and IMAP for local repositories.
type = Maildir
# Where should the mail be placed?
localfolders = ~/mail/orange.fr/

[Repository orange-remote]
# Remote repos can be IMAP or Gmail, the latter being a preconfigured IMAP.
type = IMAP
remotehost = imap.orange.fr
remoteusereval = get_username("orange.fr")
remotepasseval = get_password("orange.fr")
# Necessary as of OfflineIMAP 6.5.4
sslcacertfile = /etc/ssl/certs/ca-certificates.crt


[Account gandi]
# Identifier for the local repository; e.g. the maildir to be synced via IMAP.
localrepository = gandi-local
# Identifier for the remote repository; i.e. the actual IMAP, usually non-local.
remoterepository = gandi-remote
postsynchook = mu index --maildir ~/mail

[Repository gandi-local]
# OfflineIMAP supports Maildir, GmailMaildir, and IMAP for local repositories.
type = Maildir
# Where should the mail be placed?
localfolders = ~/mail/gandi.net/

[Repository gandi-remote]
# Remote repos can be IMAP or Gmail, the latter being a preconfigured IMAP.
type = IMAP
remotehost = mail.gandi.net
remoteusereval = get_username("gandi.net")
remotepasseval = get_password("gandi.net")
# Necessary as of OfflineIMAP 6.5.4
sslcacertfile = /etc/ssl/certs/ca-certificates.crt


[Account gmail]
# Identifier for the local repository; e.g. the maildir to be synced via IMAP.
localrepository = gmail-local
# Identifier for the remote repository; i.e. the actual IMAP, usually non-local.
remoterepository = gmail-remote
postsynchook = mu index --maildir ~/mail



[Repository gmail-local]
type = GmailMaildir
localfolders = ~/mail/gmail.com/

[Repository gmail-remote]
type = Gmail
remoteusereval = get_username("google.com")
remotepasseval = get_password("google.com")
nametrans = lambda foldername: re.sub ('^\[gmail\]', 'bak',
                               re.sub ('sent_mail', 'sent',
                               re.sub ('starred', 'flagged',
                               re.sub (' ', '_', foldername.lower()))))
folderfilter = lambda foldername: foldername not in ['[Gmail]/All Mail']
# Necessary as of OfflineIMAP 6.5.4
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
# Necessary to work around https://github.com/OfflineIMAP/offlineimap/issues/573 (versions 7.0.12, 7.2.1)
ssl_version = tls1_2
